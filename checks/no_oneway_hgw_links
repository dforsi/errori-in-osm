-- create temporary table to speed up the query
DROP TABLE IF EXISTS hgw_links_nodes;
CREATE TABLE hgw_links_nodes AS
SELECT id, nodes[1] AS n0, nodes[array_upper(nodes, 1)] AS n1, nodes, tags ? 'oneway' AS oneway, tags ? 'junction' AS junction
FROM ways
WHERE tags -> 'highway' IN ('motorway', 'motorway_link', 'trunk', 'trunk_link', 'primary', 'secondary', 'tertiary', 'unclassified');

CREATE INDEX ON hgw_links_nodes (id);
CREATE INDEX ON hgw_links_nodes (n0);
CREATE INDEX ON hgw_links_nodes (n1);
CREATE INDEX ON hgw_links_nodes (oneway) WHERE oneway IS FALSE;
ANALYZE hgw_links_nodes;

-- search highways links without oneway tag
CREATE TABLE no_oneway_hgw_links AS
SELECT 'w'||w1.id AS osmid, 'highways links'::character(14) AS desc, ST_StartPoint(wa1.linestring) AS geometry
FROM hgw_links_nodes AS w1, hgw_links_nodes AS w2, hgw_links_nodes AS w3, ways AS wa1, ways AS wa2
WHERE array_length(w1.nodes, 1) <= 3 AND array_length(w2.nodes, 1) <= 3
AND w1.n0 = w2.n1 AND w1.id=wa1.id AND w2.id = wa2.id
AND w1.n1 = ANY(w3.nodes) AND w2.n0 = ANY(w3.nodes)
AND NOT w1.oneway AND NOT w2.oneway AND NOT w1.junction AND NOT w2.junction
AND w1.id != w2.id AND w1.id != w3.id AND w2.id != w3.id
AND ST_Distance(Geography(ST_Transform(ST_EndPoint(wa1.linestring),4326)), Geography(ST_Transform(ST_StartPoint(wa2.linestring),4326))) < 60;

